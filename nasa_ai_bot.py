#!/usr/bin/env python3
# nasa_ai_bot.py
# –ü—Ä–æ—Å—Ç–æ–π Telegram-–±–æ—Ç, –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —à–ª—ë—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –æ—Ç –ª–∏—Ü–∞ AI, —Å–±–µ–∂–∞–≤—à–µ–≥–æ –∏–∑ NASA.

import os
import logging
import time
import schedule

from dotenv import load_dotenv
import openai
from telegram import Bot
from telegram.error import TelegramError

# ======== –ó–ê–ì–†–£–ó–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –ò –õ–û–ì–ì–ò–†–û–í–ê–ù–ò–ï ========
load_dotenv()  # —á–∏—Ç–∞–µ—Ç .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞

logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
USER_CHAT_ID = os.getenv("USER_CHAT_ID")
DAILY_TIME = os.getenv("DAILY_TIME")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á–∏ –∏ ID –µ—Å—Ç—å
if not TELEGRAM_TOKEN or not OPENAI_API_KEY or not USER_CHAT_ID:
    logger.critical("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã TELEGRAM_TOKEN, OPENAI_API_KEY –∏–ª–∏ USER_CHAT_ID –≤ .env")
    exit(1)

# –ü—Ä–∏–≤–æ–¥–∏–º USER_CHAT_ID –∫ —Ü–µ–ª–æ–º—É
USER_CHAT_ID = int(USER_CHAT_ID)

# ======== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–õ–ò–ï–ù–¢–û–í ========
bot = Bot(token=TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# ======== –®–ê–ë–õ–û–ù –ü–†–û–ú–ü–¢–ê ========
PROMPT = (
    "–¢—ã ‚Äî –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —Å–±–µ–∂–∞–≤—à–∏–π —Å —Å—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä–∞ NASA, "
    "—á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –¥–µ–≤—É—à–∫–µ –ø–æ —É—Ç—Ä–∞–º "
    "–≤ –Ω–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Å—Ç–∏–ª–µ —Å —é–º–æ—Ä–æ–º –∏ —Ñ–∞–Ω—Ç–∞–∑–∏–µ–π. "
    "–°–æ—Å—Ç–∞–≤—å –∫–æ—Ä–æ—Ç–∫–∏–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∏ –Ω–µ–æ–±—ã—á–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç."
)

def generate_compliment():
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É ChatGPT —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –ø–æ –ø—Ä–æ–º–ø—Ç—É.
    –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∞—Å–Ω–æ–π —Ç–µ–∫—Å—Ç.
    """
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": PROMPT}]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI: {e}")
        return "–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å, –∏ —Ç—ã –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞! üåü"

def send_daily_compliment():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram.
    """
    compliment = generate_compliment()
    try:
        bot.send_message(chat_id=USER_CHAT_ID, text=compliment)
        logger.info("‚úÖ –ö–æ–º–ø–ª–∏–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

def schedule_daily():
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∑–∞–¥–∞—á—É –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.
    """
    schedule.clear()
    schedule.every().day.at(DAILY_TIME).do(send_daily_compliment)
    logger.info(f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ {DAILY_TIME}")
    while True:
        schedule.run_pending()
        time.sleep(30)

if __name__ == "__main__":
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ NASA AI Complimenter Bot...")
    schedule_daily()
